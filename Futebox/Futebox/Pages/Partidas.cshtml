@page
@model Futebox.Pages.PartidasModel
@{
    ViewData["Title"] = "Partidas";
    Func<DateTime, string> Calcular = (dt) =>
    {

        var start = dt;
        var end = dt.AddHours(2);
        var total = (end - start).TotalSeconds;
        var percentage = (DateTime.Now - start).TotalSeconds * 100 / total;
        return (percentage < 0 ? 0 : percentage > 100 ? 100 : percentage).ToString().Replace(",", ".");

    };

    var socialIGV = (int)Futebox.Models.Enums.RedeSocialFinalidade.InstagramVideo;
    var socialYTV = (int)Futebox.Models.Enums.RedeSocialFinalidade.YoutubeVideo;
    var socialYTS = (int)Futebox.Models.Enums.RedeSocialFinalidade.YoutubeShorts;
}


<div class="row g-5">

    <div class="text-center">
        <h1 class="display-4">Partidas hoje!</h1>
    </div>
</div>

<div id="rodada">
    <style>
        img {
            width: 48px;
        }

        .progress {
            border-radius: 0;
            height: 5px;
        }
    </style>

    <div class="row sp">
        @foreach (var p in Model.partidas.OrderBy(_ => _.dataPartida))
        {
            <div class="col-3 mb-2">

                <div id="content" class="card text-center">
                    <div class="card-header fs-sport f">
                        @(p.dataPartida.ToString("ddd, d MMM yyyy - HH:mm"))<br />
                        @(p.campeonato) - @(p.rodada)<sup>a</sup> Rodada
                    </div>
                    <div class="card-body p-0">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated @(p.dataPartida.AddHours(2) < DateTime.Now ? "bg-success" : "bg-danger")" role="progressbar"
                                 data-start="@(p.dataPartida.ToString("yyyy-MM-dd HH:mm"))"
                                 data-end="@(p.dataPartida.AddHours(2).ToString("yyyy-MM-dd HH:mm"))"
                                 style="width:0"></div>
                        </div>
                    </div>
                    <div class="card-body" id="bg">
                        <div class="d-flex justify-content-around flex-row align-items-left">
                            <div class="d-flex justify-content-between align-items-center fs-sport">
                                <div class="logo-l d-flex flex-column align-items-center">
                                    <img src="data:image/png;base64, @(p.timeMandante.logoBin)" />
                                    <div class="name name-l ml-5">
                                        @(p.timeMandante.nome)
                                    </div>
                                </div>
                            </div>
                            @*<div class="fs-sport">x</div>*@
                            <div class="d-flex justify-content-between align-items-center fs-sport">
                                <div class="logo-r d-flex flex-column align-items-center">
                                    <img src="data:image/png;base64, @(p.timeVisitante.logoBin)" />
                                    <div class="name name-r ml-5">
                                        @(p.timeVisitante.nome)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer fs-sport f">
                        estádio @p.estadio
                    </div>
                    <div class="card-footer" data-config="@(socialYTS)">
                        <label class="form-check-label" for="social-@(socialYTS)">Youtube Shorts</label>
                        <label class="form-check-label" for="social-@(socialYTS)">'@(p.timeMandante.nome) x @(p.timeVisitante.nome) @(p.campeonato) - @(DateTime.Now.ToString("dd/MM/yyyy")) #shorts'</label>
                        <button onclick="VisualizarMiniatura('@p.idExterno', '@(socialYTS)', '1080', '1920')" class="btn btn-outline-primary">👁</button>
                        <button onclick="GerarProcesso('@p.idExterno', '@(socialYTS)', '@(p.timeMandante.nome) x @(p.timeVisitante.nome) @(p.campeonato) - @(DateTime.Now.ToString("dd/MM/yyyy")) #shorts')" class="btn btn-outline-danger">⚙</button>
                    </div>
                    <div class="card-footer" data-config="@(socialIGV)">
                        <label class="form-check-label" for="social-@(socialIGV)">Instagram Vídeo</label>
                        <label class="form-check-label" for="social-@(socialIGV)">'@(p.timeMandante.nome) x @(p.timeVisitante.nome) @(p.campeonato) - @(DateTime.Now.ToString("dd/MM/yyyy"))'</label>
                        <button onclick="VisualizarMiniatura('@p.idExterno', '@(socialIGV)', '1350', '1920')" class="btn btn-outline-primary">👁</button>
                        <button onclick="GerarProcesso('@p.idExterno', '@(socialIGV)', '@(p.timeMandante.nome) x @(p.timeVisitante.nome) @(p.campeonato) - @(DateTime.Now.ToString("dd/MM/yyyy"))')" class="btn btn-outline-danger">⚙</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="card"></div>

@section Scripts{
    <script>

        var view = {
            post: (url, data, success) => $.ajax({
                type: 'POST',
                url: url,
                data: JSON.stringify(data),
                success: success,
                contentType: "application/json; charset=utf-8"
            }),
            data: (s, p, t) => {
                return {
                    social: ~~s,
                    partida: ~~p,
                    titulo: t
                }
            }
        };

        function VisualizarMiniatura(p, s, w, h) {
            window.open(`/Miniaturas?t=partida&q=${JSON.stringify(view.data(s, p))}&w=${w}&h=${h}`, '_blank');
        }

        function GerarProcesso(p, s, t) {
            debugger
            view.post(`/api/processo/partida`, [view.data(s, p, t)], (response) => {
                $.SendToast(response.id, 'Processo criado!');
            });
        }

        var percent = (start, end) => {
            var today = new Date();
            if (today < start) return 0;
            //use Math.abs to avoid sign
            var q = Math.abs(today - start);
            var d = Math.abs(end - start);
            //alert("Rounded: " + Math.round((q / d) * 100) + "%");
            //alert("Fraction: " + ((q / d) * 100) + "%");
            var porcentagem = ((q / d) * 100);
            console.log(porcentagem);
            return porcentagem > 100 ? 100 : porcentagem < 0 ? 0 : porcentagem;
        }

        setInterval(() => {
            $('.progress-bar').each((i, e) => {
                var start = $(e).attr('data-start');
                var end = $(e).attr('data-end');
                var dt1 = new Date(start);
                var dt2 = new Date(end);
                $(e).attr('style', `width:${percent(dt1, dt2)}%`);
            })
        }, 1000 //* 60 * 1.5
        );

    </script>
}