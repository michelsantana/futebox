@model Futebox.Pages.MiniaturasModel.ClassificacaoHandlerModel
@{
    var debug = false;

    var colunas = Model.args.colunas;
    var linhas = Model.args.linhas;

    colunas = colunas > 0 ? colunas : 4;
    linhas = colunas > 0 ? linhas : 2;
}
@{
    var w = $"{Model.width}";
    var h = $"{Model.height}";
    w = string.IsNullOrEmpty(w) ? "1920" : w;
    h = string.IsNullOrEmpty(h) ? "1080" : h;

    if (debug)
    {
        w = "1920"; h = "1080";
        colunas = 2; linhas = 2;

        //w = "1080"; h = "1920";
        //colunas = 2; linhas = 4;

        //w = "1080"; h = "1350";
        //colunas = 2; linhas = 4;

        //w = "1080"; h = "1350";
        //colunas = 2; linhas = 3;
    }
}
@if (debug && false)
{
    <style>
        #mini-body {
            outline: 2px solid #F00;
        }

        #mini-header {
            outline: 2px solid #0F0;
        }

        #mini-footer {
            outline: 2px solid #00F;
        }
    </style>
}
<style>
    #mini-container {
        width: @($"{w}px");
        height: @($"{h}px");
    }
</style>
<style>
    .mini-row {
        height: @($"{100 / linhas}%");
    }
    .mini-col {
        padding: 5px;
        width: @($"{100 / colunas}%");
    }
</style>
<style>
    body {
    }

    #mini-container {
        position: absolute;
        top: 0;
        left: 0;
        background: rgba(97,227,82,1);
        padding: 5px;
        z-index: 999999;
        text-shadow: 2px 2px 0 #fff, 2px -2px 0 #fff, -2px 2px 0 #fff, -2px -2px 0 #fff, 2px 0px 0 #fff, 0px 2px 0 #fff, -2px 0px 0 #fff, 0px -2px 0 #fff;
    }

    #mini-header {
        font-size: 70px;
        font-weight: bold;
        text-align: center;
        height: 10%;
    }

    #mini-body {
        height: 80%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    #mini-table {
        table-layout: fixed;
        width: 100%;
        height: 100%;
    }

    .mini-row {
        display: flex;
        flex-direction: row;
        align-items: stretch;
        justify-content: space-around;
    }

    #mini-footer {
        font-weight: bold;
        text-align: center;
        height: 10%;
        display: flex;
        align-content: flex-start;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

        #mini-footer .fitness-target {
            display: flex;
            flex-direction: column;
            align-content: flex-start;
            align-items: flex-start;
        }
</style>
<div id="mini-container" class="fs-sport">
    <div id="mini-header" class="fitness">
        <span class="fitness-target">@($"{Models.CampeonatoUtils.ObterNomeDoCampeonato(Model.args.campeonato)}")</span>
    </div>
    <div id="mini-body">

        <div class="mini-row" row="1">


            <div class="mini-col" col="1">
                @Html.Partial("Miniaturas/_classificacaoCard", Tuple.Create(Model.classificacao, false))
            </div>
            <div class="mini-col" col="2">
                @Html.Partial("Miniaturas/_classificacaoCard", Tuple.Create(Model.classificacao, false))
            </div>


        </div>
    </div>
    <div id="mini-footer">
        <div class="w-50 h-100 fitness">
            <div class="fitness-target">
                @Html.Raw(Model.legenda)
            </div>
        </div>
        <div class="w-50 h-100 fitness">
            <div class="">

            </div>
        </div>
    </div>
</div>